{"version":3,"file":"DotFilter.mjs","sources":["../../src/dot/DotFilter.ts"],"sourcesContent":["import { deprecation, Filter, GlProgram, GpuProgram } from 'pixi.js';\r\nimport { vertex, wgslVertex } from '../defaults';\r\nimport fragment from './dot.frag';\r\nimport source from './dot.wgsl';\r\n\r\n/** Options for the DotFilter constructor. */\r\nexport interface DotFilterOptions\r\n{\r\n    /**\r\n     * The scale of the effect\r\n     * @default 1\r\n     */\r\n    scale?: number;\r\n    /**\r\n     * The angle of the effect\r\n     * @default 5\r\n     */\r\n    angle?: number;\r\n    /**\r\n     * Whether to rendering it in gray scale\r\n     * @default true\r\n     */\r\n    grayscale?: boolean;\r\n}\r\n\r\n/**\r\n * This filter applies a dotscreen effect making display objects appear to be made out of\r\n * black and white halftone dots like an old printer.<br>\r\n * ![original](../screenshots/original.png)![filter](../screenshots/dot.png)\r\n *\r\n * {@link https://github.com/evanw/glfx.js/blob/master/src/filters/fun/dotscreen.js Original filter}\r\n *\r\n * @class\r\n * @extends Filter\r\n */\r\nexport class DotFilter extends Filter\r\n{\r\n    /** Default values for options. */\r\n    public static readonly DEFAULT_OPTIONS: DotFilterOptions = {\r\n        scale: 1,\r\n        angle: 5,\r\n        grayscale: true\r\n    };\r\n\r\n    /**\r\n     * @param options - Options for the DotFilter constructor.\r\n     */\r\n    constructor(options?: DotFilterOptions);\r\n    /**\r\n     * @deprecated since 6.0.0\r\n     *\r\n     * @param {number} [scale=1] - The scale of the effect.\r\n     * @param {number} [angle=5] - The radius of the effect.\r\n     * @param {boolean} [grayscale=true] - Render as grayscale.\r\n     */\r\n    constructor(scale?: number, angle?: number, grayscale?: boolean);\r\n    /** @ignore */\r\n    constructor(...args: [DotFilterOptions?] | [number?, number?, boolean?])\r\n    {\r\n        let options = args[0] ?? {};\r\n\r\n        if (typeof options === 'number')\r\n        {\r\n            // eslint-disable-next-line max-len\r\n            deprecation('6.0.0', 'DotFilter constructor params are now options object. See params: { scale, angle, grayscale }');\r\n\r\n            options = { scale: options };\r\n\r\n            if (args[1] !== undefined) options.angle = args[1];\r\n            if (args[2] !== undefined) options.grayscale = args[2];\r\n        }\r\n\r\n        options = { ...DotFilter.DEFAULT_OPTIONS, ...options };\r\n\r\n        const dotUniforms = {\r\n            uScale: { value: options.scale, type: 'f32' },\r\n            uAngle: { value: options.angle, type: 'f32' },\r\n            uGrayScale: { value: options.grayscale ? 1 : 0, type: 'f32' },\r\n        };\r\n\r\n        const gpuProgram = GpuProgram.from({\r\n            vertex: {\r\n                source: wgslVertex,\r\n                entryPoint: 'mainVertex',\r\n            },\r\n            fragment: {\r\n                source,\r\n                entryPoint: 'mainFragment',\r\n            },\r\n        });\r\n\r\n        const glProgram = GlProgram.from({\r\n            vertex,\r\n            fragment,\r\n            name: 'dot-filter',\r\n        });\r\n\r\n        super({\r\n            gpuProgram,\r\n            glProgram,\r\n            resources: {\r\n                dotUniforms,\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The scale of the effect.\r\n     * @default 1\r\n     */\r\n    get scale(): number { return this.resources.dotUniforms.uniforms.uScale; }\r\n    set scale(value: number) { this.resources.dotUniforms.uniforms.uScale = value; }\r\n\r\n    /**\r\n    * The radius of the effect.\r\n    * @default 5\r\n    */\r\n    get angle(): number { return this.resources.dotUniforms.uniforms.uAngle; }\r\n    set angle(value: number) { this.resources.dotUniforms.uniforms.uAngle = value; }\r\n\r\n    /**\r\n    * Whether to rendering it in gray scale.\r\n    * @default true\r\n    */\r\n    get grayscale(): boolean { return this.resources.dotUniforms.uniforms.uGrayScale === 1; }\r\n    set grayscale(value: boolean) { this.resources.dotUniforms.uniforms.uGrayScale = value ? 1 : 0; }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAmCO,MAAM,UAAA,GAAN,MAAM,UAAA,SAAkB,MAC/B,CAAA;AAAA;AAAA,EAqBI,eAAe,IACf,EAAA;AACI,IAAA,IAAI,OAAU,GAAA,IAAA,CAAK,CAAC,CAAA,IAAK,EAAC,CAAA;AAE1B,IAAI,IAAA,OAAO,YAAY,QACvB,EAAA;AAEI,MAAA,WAAA,CAAY,SAAS,8FAA8F,CAAA,CAAA;AAEnH,MAAU,OAAA,GAAA,EAAE,OAAO,OAAQ,EAAA,CAAA;AAE3B,MAAI,IAAA,IAAA,CAAK,CAAC,CAAM,KAAA,KAAA,CAAA;AAAW,QAAQ,OAAA,CAAA,KAAA,GAAQ,KAAK,CAAC,CAAA,CAAA;AACjD,MAAI,IAAA,IAAA,CAAK,CAAC,CAAM,KAAA,KAAA,CAAA;AAAW,QAAQ,OAAA,CAAA,SAAA,GAAY,KAAK,CAAC,CAAA,CAAA;AAAA,KACzD;AAEA,IAAA,OAAA,GAAU,EAAE,GAAG,UAAU,CAAA,eAAA,EAAiB,GAAG,OAAQ,EAAA,CAAA;AAErD,IAAA,MAAM,WAAc,GAAA;AAAA,MAChB,QAAQ,EAAE,KAAA,EAAO,OAAQ,CAAA,KAAA,EAAO,MAAM,KAAM,EAAA;AAAA,MAC5C,QAAQ,EAAE,KAAA,EAAO,OAAQ,CAAA,KAAA,EAAO,MAAM,KAAM,EAAA;AAAA,MAC5C,UAAA,EAAY,EAAE,KAAO,EAAA,OAAA,CAAQ,YAAY,CAAI,GAAA,CAAA,EAAG,MAAM,KAAM,EAAA;AAAA,KAChE,CAAA;AAEA,IAAM,MAAA,UAAA,GAAa,WAAW,IAAK,CAAA;AAAA,MAC/B,MAAQ,EAAA;AAAA,QACJ,MAAQ,EAAA,UAAA;AAAA,QACR,UAAY,EAAA,YAAA;AAAA,OAChB;AAAA,MACA,QAAU,EAAA;AAAA,QACN,MAAA;AAAA,QACA,UAAY,EAAA,cAAA;AAAA,OAChB;AAAA,KACH,CAAA,CAAA;AAED,IAAM,MAAA,SAAA,GAAY,UAAU,IAAK,CAAA;AAAA,MAC7B,MAAA;AAAA,MACA,QAAA;AAAA,MACA,IAAM,EAAA,YAAA;AAAA,KACT,CAAA,CAAA;AAED,IAAM,KAAA,CAAA;AAAA,MACF,UAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAW,EAAA;AAAA,QACP,WAAA;AAAA,OACJ;AAAA,KACH,CAAA,CAAA;AAAA,GACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,KAAgB,GAAA;AAAE,IAAO,OAAA,IAAA,CAAK,SAAU,CAAA,WAAA,CAAY,QAAS,CAAA,MAAA,CAAA;AAAA,GAAQ;AAAA,EACzE,IAAI,MAAM,KAAe,EAAA;AAAE,IAAK,IAAA,CAAA,SAAA,CAAU,WAAY,CAAA,QAAA,CAAS,MAAS,GAAA,KAAA,CAAA;AAAA,GAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAM/E,IAAI,KAAgB,GAAA;AAAE,IAAO,OAAA,IAAA,CAAK,SAAU,CAAA,WAAA,CAAY,QAAS,CAAA,MAAA,CAAA;AAAA,GAAQ;AAAA,EACzE,IAAI,MAAM,KAAe,EAAA;AAAE,IAAK,IAAA,CAAA,SAAA,CAAU,WAAY,CAAA,QAAA,CAAS,MAAS,GAAA,KAAA,CAAA;AAAA,GAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAM/E,IAAI,SAAqB,GAAA;AAAE,IAAA,OAAO,IAAK,CAAA,SAAA,CAAU,WAAY,CAAA,QAAA,CAAS,UAAe,KAAA,CAAA,CAAA;AAAA,GAAG;AAAA,EACxF,IAAI,UAAU,KAAgB,EAAA;AAAE,IAAA,IAAA,CAAK,SAAU,CAAA,WAAA,CAAY,QAAS,CAAA,UAAA,GAAa,QAAQ,CAAI,GAAA,CAAA,CAAA;AAAA,GAAG;AACpG,CAAA,CAAA;AAAA;AAxFI,aAAA,CAHS,YAGc,iBAAoC,EAAA;AAAA,EACvD,KAAO,EAAA,CAAA;AAAA,EACP,KAAO,EAAA,CAAA;AAAA,EACP,SAAW,EAAA,IAAA;AACf,CAAA,CAAA,CAAA;AAPG,IAAM,SAAN,GAAA;;;;"}