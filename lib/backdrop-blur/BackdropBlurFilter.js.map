{"version":3,"file":"BackdropBlurFilter.js","sources":["../../src/backdrop-blur/BackdropBlurFilter.ts"],"sourcesContent":["import {\r\n    BlurFilter,\r\n    BlurFilterOptions,\r\n    Filter,\r\n    FilterSystem,\r\n    GlProgram,\r\n    GpuProgram,\r\n    RenderSurface,\r\n    Texture,\r\n    TexturePool,\r\n} from 'pixi.js';\r\nimport { vertex, wgslVertex } from '../defaults';\r\nimport fragment from './backdrop-blur-blend.frag';\r\nimport wgslFragment from './backdrop-blur-blend.wgsl';\r\n\r\n/**\r\n * The BackdropBlurFilter applies a Gaussian blur to everything behind an object, and then draws the object on top of it.<br>\r\n * ![original](../screenshots/original.png)![filter](../screenshots/backdrop-blur.png)\r\n *\r\n * @class\r\n * @extends BlurFilter\r\n */\r\nexport class BackdropBlurFilter extends BlurFilter\r\n{\r\n    private _blendPass: Filter;\r\n\r\n    /**\r\n     * @param options - The options of the blur filter.\r\n     */\r\n    constructor(options?: BlurFilterOptions)\r\n    {\r\n        super(options);\r\n\r\n        this.blendRequired = true;\r\n        this.padding = 0;\r\n\r\n        this._blendPass = new Filter({\r\n            gpuProgram: GpuProgram.from({\r\n                vertex: {\r\n                    source: wgslVertex,\r\n                    entryPoint: 'mainVertex',\r\n                },\r\n                fragment: {\r\n                    source: wgslFragment,\r\n                    entryPoint: 'mainFragment',\r\n                },\r\n            }),\r\n            glProgram: GlProgram.from({\r\n                vertex,\r\n                fragment,\r\n                name: 'drop-shadow-filter',\r\n            }),\r\n            resources: {\r\n                uBackground: Texture.EMPTY,\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Override existing apply method in `Filter`\r\n     * @override\r\n     * @ignore\r\n     */\r\n    public apply(\r\n        filterManager: FilterSystem,\r\n        input: Texture,\r\n        output: RenderSurface,\r\n        clearMode: boolean\r\n    ): void\r\n    {\r\n        // @ts-expect-error - this should probably not be grabbed from a private property\r\n        const backTexture = filterManager._activeFilterData.backTexture;\r\n\r\n        const blurredBackground = TexturePool.getSameSizeTexture(input);\r\n\r\n        super.apply(filterManager, backTexture, blurredBackground, true);\r\n\r\n        this._blendPass.resources.uBackground = blurredBackground.source;\r\n        this._blendPass.apply(filterManager, input, output, clearMode);\r\n\r\n        TexturePool.returnTexture(blurredBackground);\r\n    }\r\n\r\n    protected updatePadding(): void\r\n    {\r\n        this.padding = 0;\r\n    }\r\n}\r\n"],"names":["BlurFilter","Filter","GpuProgram","wgslVertex","wgslFragment","GlProgram","vertex","fragment","Texture","TexturePool"],"mappings":";;;;;;;;;;;;;;;;AAsBO,MAAM,2BAA2BA,kBACxC,CAAA;AAAA;AAAA;AAAA;AAAA,EAMI,YAAY,OACZ,EAAA;AACI,IAAA,KAAA,CAAM,OAAO,CAAA,CAAA;AAPjB,IAAQ,aAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA;AASJ,IAAA,IAAA,CAAK,aAAgB,GAAA,IAAA,CAAA;AACrB,IAAA,IAAA,CAAK,OAAU,GAAA,CAAA,CAAA;AAEf,IAAK,IAAA,CAAA,UAAA,GAAa,IAAIC,cAAO,CAAA;AAAA,MACzB,UAAA,EAAYC,mBAAW,IAAK,CAAA;AAAA,QACxB,MAAQ,EAAA;AAAA,UACJ,MAAQ,EAAAC,mBAAA;AAAA,UACR,UAAY,EAAA,YAAA;AAAA,SAChB;AAAA,QACA,QAAU,EAAA;AAAA,UACN,MAAQ,EAAAC,4BAAA;AAAA,UACR,UAAY,EAAA,cAAA;AAAA,SAChB;AAAA,OACH,CAAA;AAAA,MACD,SAAA,EAAWC,kBAAU,IAAK,CAAA;AAAA,gBACtBC,qBAAA;AAAA,kBACAC,8BAAA;AAAA,QACA,IAAM,EAAA,oBAAA;AAAA,OACT,CAAA;AAAA,MACD,SAAW,EAAA;AAAA,QACP,aAAaC,eAAQ,CAAA,KAAA;AAAA,OACzB;AAAA,KACH,CAAA,CAAA;AAAA,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,KACH,CAAA,aAAA,EACA,KACA,EAAA,MAAA,EACA,SAEJ,EAAA;AAEI,IAAM,MAAA,WAAA,GAAc,cAAc,iBAAkB,CAAA,WAAA,CAAA;AAEpD,IAAM,MAAA,iBAAA,GAAoBC,mBAAY,CAAA,kBAAA,CAAmB,KAAK,CAAA,CAAA;AAE9D,IAAA,KAAA,CAAM,KAAM,CAAA,aAAA,EAAe,WAAa,EAAA,iBAAA,EAAmB,IAAI,CAAA,CAAA;AAE/D,IAAK,IAAA,CAAA,UAAA,CAAW,SAAU,CAAA,WAAA,GAAc,iBAAkB,CAAA,MAAA,CAAA;AAC1D,IAAA,IAAA,CAAK,UAAW,CAAA,KAAA,CAAM,aAAe,EAAA,KAAA,EAAO,QAAQ,SAAS,CAAA,CAAA;AAE7D,IAAAA,mBAAA,CAAY,cAAc,iBAAiB,CAAA,CAAA;AAAA,GAC/C;AAAA,EAEU,aACV,GAAA;AACI,IAAA,IAAA,CAAK,OAAU,GAAA,CAAA,CAAA;AAAA,GACnB;AACJ;;;;"}