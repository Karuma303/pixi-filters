{"version":3,"file":"ColorReplaceFilter.js","sources":["../../src/color-replace/ColorReplaceFilter.ts"],"sourcesContent":["import { Color, ColorSource, deprecation, Filter, GlProgram, GpuProgram } from 'pixi.js';\r\nimport { vertex, wgslVertex } from '../defaults';\r\nimport fragment from './color-replace.frag';\r\nimport source from './color-replace.wgsl';\r\n\r\n/**\r\n * This WebGPU filter has been ported from the WebGL renderer that was originally created by mishaa, updated by timetocode\r\n * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966\r\n */\r\n\r\ntype DeprecatedColor = number | number[] | Float32Array;\r\n\r\n/** Options for the ColorReplaceFilter constructor. */\r\nexport interface ColorReplaceFilterOptions\r\n{\r\n    /**\r\n     * The color that will be changed.\r\n     * @example [1.0, 1.0, 1.0] = 0xffffff\r\n     * @default 0xff0000\r\n     */\r\n    originalColor?: ColorSource;\r\n    /**\r\n     * The resulting color.\r\n     * @example [1.0, 1.0, 1.0] = 0xffffff\r\n     * @default 0x000000\r\n     */\r\n    targetColor?: ColorSource;\r\n    /**\r\n     * Tolerance/sensitivity of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\r\n     * @default 0.4\r\n     */\r\n    tolerance?: number;\r\n}\r\n\r\n/**\r\n * ColorReplaceFilter, originally by mishaa, updated by timetocode\r\n * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966<br>\r\n * ![original](../screenshots/original.png)![filter](../screenshots/color-replace.png)\r\n *\r\n * @class\r\n * @extends Filter\r\n *\r\n * @example\r\n *  // replaces true red with true blue\r\n *  someSprite.filters = [new ColorReplaceFilter({\r\n *   originalColor: [1, 0, 0],\r\n *   targetColor: [0, 0, 1],\r\n *   tolerance: 0.001\r\n *   })];\r\n *  // replaces the RGB color 220, 220, 220 with the RGB color 225, 200, 215\r\n *  someOtherSprite.filters = [new ColorReplaceFilter({\r\n *   originalColor: [220/255.0, 220/255.0, 220/255.0],\r\n *   targetColor: [225/255.0, 200/255.0, 215/255.0],\r\n *   tolerance: 0.001\r\n *   })];\r\n *  // replaces the RGB color 220, 220, 220 with the RGB color 225, 200, 215\r\n *  someOtherSprite.filters = [new ColorReplaceFilter({ originalColor: 0xdcdcdc, targetColor: 0xe1c8d7, tolerance: 0.001 })];\r\n *\r\n */\r\nexport class ColorReplaceFilter extends Filter\r\n{\r\n    /** Default values for options. */\r\n    public static readonly DEFAULT_OPTIONS: ColorReplaceFilterOptions = {\r\n        originalColor: 0xff0000,\r\n        targetColor: 0x000000,\r\n        tolerance: 0.4\r\n    };\r\n\r\n    public uniforms: {\r\n        uOriginalColor: Float32Array,\r\n        uTargetColor: Float32Array,\r\n        uTolerance: number,\r\n    };\r\n\r\n    private _originalColor: Color;\r\n    private _targetColor: Color;\r\n\r\n    /**\r\n     * @param options - Options for the ColorReplaceFilter constructor.\r\n     */\r\n    constructor(options?: ColorReplaceFilterOptions);\r\n    /**\r\n     * @deprecated since 6.0.0\r\n     *\r\n     * @param {number|Array<number>|Float32Array} [originalColor=0xFF0000] - The color that will be changed,\r\n     *        as a 3 component RGB e.g. `[1.0, 1.0, 1.0]`\r\n     * @param {number|Array<number>|Float32Array} [newColor=0x000000] - The resulting color, as a 3 component\r\n     *        RGB e.g. `[1.0, 0.5, 1.0]`\r\n     * @param {number} [epsilon=0.4] - Tolerance/sensitivity of the floating-point comparison between colors\r\n     *        (lower = more exact, higher = more inclusive)\r\n     */\r\n    constructor(originalColor?: number, newColor?: number, epsilon?: number);\r\n    /** @ignore */\r\n    constructor(...args: [ColorReplaceFilterOptions?] | [DeprecatedColor?, DeprecatedColor?, number?])\r\n    {\r\n        let options = args[0] ?? {};\r\n\r\n        if (typeof options === 'number' || Array.isArray(options) || options instanceof Float32Array)\r\n        {\r\n            // eslint-disable-next-line max-len\r\n            deprecation('6.0.0', 'ColorReplaceFilter constructor params are now options object. See params: { originalColor, targetColor, tolerance }');\r\n\r\n            options = { originalColor: options };\r\n\r\n            if (args[1] !== undefined) options.targetColor = args[1];\r\n            if (args[2] !== undefined) options.tolerance = args[2];\r\n        }\r\n\r\n        options = { ...ColorReplaceFilter.DEFAULT_OPTIONS, ...options };\r\n\r\n        const gpuProgram = GpuProgram.from({\r\n            vertex: {\r\n                source: wgslVertex,\r\n                entryPoint: 'mainVertex',\r\n            },\r\n            fragment: {\r\n                source,\r\n                entryPoint: 'mainFragment',\r\n            },\r\n        });\r\n\r\n        const glProgram = GlProgram.from({\r\n            vertex,\r\n            fragment,\r\n            name: 'color-replace-filter',\r\n        });\r\n\r\n        super({\r\n            gpuProgram,\r\n            glProgram,\r\n            resources: {\r\n                colorReplaceUniforms: {\r\n                    uOriginalColor: { value: new Float32Array(3), type: 'vec3<f32>' },\r\n                    uTargetColor: { value: new Float32Array(3), type: 'vec3<f32>' },\r\n                    uTolerance: { value: options.tolerance, type: 'f32' },\r\n                }\r\n            },\r\n        });\r\n\r\n        this.uniforms = this.resources.colorReplaceUniforms.uniforms;\r\n\r\n        this._originalColor = new Color();\r\n        this._targetColor = new Color();\r\n        this.originalColor = options.originalColor ?? 0xff0000;\r\n        this.targetColor = options.targetColor ?? 0x000000;\r\n\r\n        Object.assign(this, options);\r\n    }\r\n\r\n    /**\r\n     * The color that will be changed.\r\n     * @example [1.0, 1.0, 1.0] = 0xffffff\r\n     * @default 0xff0000\r\n     */\r\n    get originalColor(): ColorSource { return this._originalColor.value as ColorSource; }\r\n    set originalColor(value: ColorSource)\r\n    {\r\n        this._originalColor.setValue(value);\r\n        const [r, g, b] = this._originalColor.toArray();\r\n\r\n        this.uniforms.uOriginalColor[0] = r;\r\n        this.uniforms.uOriginalColor[1] = g;\r\n        this.uniforms.uOriginalColor[2] = b;\r\n    }\r\n\r\n    /**\r\n      * The resulting color.\r\n      * @example [1.0, 1.0, 1.0] = 0xffffff\r\n      * @default 0x000000\r\n      */\r\n    get targetColor(): ColorSource { return this._targetColor.value as ColorSource; }\r\n    set targetColor(value: ColorSource)\r\n    {\r\n        this._targetColor.setValue(value);\r\n        const [r, g, b] = this._targetColor.toArray();\r\n\r\n        this.uniforms.uTargetColor[0] = r;\r\n        this.uniforms.uTargetColor[1] = g;\r\n        this.uniforms.uTargetColor[2] = b;\r\n    }\r\n\r\n    /**\r\n      * Tolerance/sensitivity of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\r\n      * @default 0.4\r\n      */\r\n    get tolerance(): number { return this.uniforms.uTolerance; }\r\n    set tolerance(value: number) { this.uniforms.uTolerance = value; }\r\n\r\n    /**\r\n     * @deprecated since 6.0.0\r\n     *\r\n     * The resulting color, as a 3 component RGB e.g. [1.0, 0.5, 1.0]\r\n     * @member {number|Array<number>|Float32Array}\r\n     * @default 0x000000\r\n     * @see ColorReplaceFilter#targetColor\r\n     */\r\n    set newColor(value: DeprecatedColor)\r\n    {\r\n        deprecation('6.0.0', 'ColorReplaceFilter.newColor is deprecated, please use ColorReplaceFilter.targetColor instead');\r\n\r\n        this.targetColor = value;\r\n    }\r\n    get newColor(): DeprecatedColor\r\n    {\r\n        deprecation('6.0.0', 'ColorReplaceFilter.newColor is deprecated, please use ColorReplaceFilter.targetColor instead');\r\n\r\n        return this.targetColor as DeprecatedColor;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since 6.0.0\r\n     *\r\n     * Tolerance/sensitivity of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\r\n     * @default 0.4\r\n     * @see ColorReplaceFilter#tolerance\r\n     */\r\n    set epsilon(value: number)\r\n    {\r\n        deprecation('6.0.0', 'ColorReplaceFilter.epsilon is deprecated, please use ColorReplaceFilter.tolerance instead');\r\n\r\n        this.tolerance = value;\r\n    }\r\n    get epsilon(): number\r\n    {\r\n        deprecation('6.0.0', 'ColorReplaceFilter.epsilon is deprecated, please use ColorReplaceFilter.tolerance instead');\r\n\r\n        return this.tolerance;\r\n    }\r\n}\r\n"],"names":["Filter","deprecation","GpuProgram","wgslVertex","source","GlProgram","vertex","fragment","Color"],"mappings":"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"}