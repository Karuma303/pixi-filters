var fragment = "in vec2 vTextureCoord;\r\nout vec4 finalColor;\r\n\r\nuniform sampler2D uTexture;\r\nuniform sampler2D uMapTexture;\r\nuniform float uMix;\r\nuniform float uSize;\r\nuniform float uSliceSize;\r\nuniform float uSlicePixelSize;\r\nuniform float uSliceInnerSize;\r\n\r\nvoid main() {\r\n    vec4 color = texture(uTexture, vTextureCoord.xy);\r\n    vec4 adjusted;\r\n\r\n    if (color.a > 0.0) {\r\n        color.rgb /= color.a;\r\n        float innerWidth = uSize - 1.0;\r\n        float zSlice0 = min(floor(color.b * innerWidth), innerWidth);\r\n        float zSlice1 = min(zSlice0 + 1.0, innerWidth);\r\n        float xOffset = uSlicePixelSize * 0.5 + color.r * uSliceInnerSize;\r\n        float s0 = xOffset + (zSlice0 * uSliceSize);\r\n        float s1 = xOffset + (zSlice1 * uSliceSize);\r\n        float yOffset = uSliceSize * 0.5 + color.g * (1.0 - uSliceSize);\r\n        vec4 slice0Color = texture(uMapTexture, vec2(s0,yOffset));\r\n        vec4 slice1Color = texture(uMapTexture, vec2(s1,yOffset));\r\n        float zOffset = fract(color.b * innerWidth);\r\n        adjusted = mix(slice0Color, slice1Color, zOffset);\r\n\r\n        color.rgb *= color.a;\r\n    }\r\n\r\n    finalColor = vec4(mix(color, adjusted, uMix).rgb, color.a);\r\n\r\n}";

export { fragment as default };
//# sourceMappingURL=color-map2.mjs.map
