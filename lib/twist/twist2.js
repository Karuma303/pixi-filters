'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var source = "struct TwistUniforms {\r\n  uTwist:vec2<f32>,\r\n  uOffset:vec2<f32>,\r\n};\r\n\r\nstruct GlobalFilterUniforms {\r\n  uInputSize:vec4<f32>,\r\n  uInputPixel:vec4<f32>,\r\n  uInputClamp:vec4<f32>,\r\n  uOutputFrame:vec4<f32>,\r\n  uGlobalFrame:vec4<f32>,\r\n  uOutputTexture:vec4<f32>,\r\n};\r\n\r\n@group(0) @binding(0) var<uniform> gfu: GlobalFilterUniforms;\r\n\r\n@group(0) @binding(1) var uTexture: texture_2d<f32>; \r\n@group(0) @binding(2) var uSampler: sampler;\r\n@group(1) @binding(0) var<uniform> twistUniforms : TwistUniforms;\r\n\r\n@fragment\r\nfn mainFragment(\r\n  @location(0) uv: vec2<f32>,\r\n  @builtin(position) position: vec4<f32>\r\n) -> @location(0) vec4<f32> {\r\n  return textureSample(uTexture, uSampler, unmapCoord(twist(mapCoord(uv))));\r\n}\r\n\r\nfn mapCoord(coord: vec2<f32> ) -> vec2<f32>\r\n{\r\n  var mappedCoord: vec2<f32> = coord;\r\n  mappedCoord *= gfu.uInputSize.xy;\r\n  mappedCoord += gfu.uOutputFrame.xy;\r\n  return mappedCoord;\r\n}\r\n\r\nfn unmapCoord(coord: vec2<f32> ) -> vec2<f32>\r\n{\r\n  var mappedCoord: vec2<f32> = coord;\r\n  mappedCoord -= gfu.uOutputFrame.xy;\r\n  mappedCoord /= gfu.uInputSize.xy;\r\n  return mappedCoord;\r\n}\r\n\r\nfn twist(coord: vec2<f32>) -> vec2<f32>\r\n{\r\n  var twistedCoord: vec2<f32> = coord;\r\n  let uRadius = twistUniforms.uTwist[0];\r\n  let uAngle = twistUniforms.uTwist[1];\r\n  let uOffset = twistUniforms.uOffset;\r\n\r\n  twistedCoord -= uOffset;\r\n  \r\n  let dist = length(twistedCoord);\r\n\r\n  if (dist < uRadius)\r\n  {\r\n    let ratioDist: f32 = (uRadius - dist) / uRadius;\r\n    let angleMod: f32 = ratioDist * ratioDist * uAngle;\r\n    let s: f32 = sin(angleMod);\r\n    let c: f32 = cos(angleMod);\r\n    twistedCoord = vec2<f32>(twistedCoord.x * c - twistedCoord.y * s, twistedCoord.x * s + twistedCoord.y * c);\r\n  }\r\n\r\n  twistedCoord += uOffset;\r\n  return twistedCoord;\r\n}\r\n";

exports["default"] = source;
//# sourceMappingURL=twist2.js.map
