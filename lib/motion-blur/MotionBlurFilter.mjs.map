{"version":3,"file":"MotionBlurFilter.mjs","sources":["../../src/motion-blur/MotionBlurFilter.ts"],"sourcesContent":["/* eslint-disable max-len */\r\nimport { deprecation, Filter, GlProgram, GpuProgram, ObservablePoint, PointData } from 'pixi.js';\r\nimport { vertex, wgslVertex } from '../defaults';\r\nimport fragment from './motion-blur.frag';\r\nimport source from './motion-blur.wgsl';\r\n\r\n/** Options for the MotionBlurFilter constructor. */\r\nexport interface MotionBlurFilterOptions\r\n{\r\n    /**\r\n     * Sets the velocity of the motion for blur effect\r\n     * This should be a size 2 array or an object containing `x` and `y` values, you cannot change types\r\n     * once defined in the constructor\r\n     * @default {x:0,y:0}\r\n     */\r\n    velocity?: PointData | number[];\r\n    /**\r\n     * The kernelSize of the blur filter. Must be odd number >= 5\r\n     * @default 5\r\n     */\r\n    kernelSize?: number;\r\n    /**\r\n     * The offset of the blur filter\r\n     * @default 0\r\n     */\r\n    offset?: number;\r\n}\r\n\r\n/**\r\n * The MotionBlurFilter applies a Motion blur to an object.<br>\r\n * ![original](../screenshots/original.png)![filter](../screenshots/motion-blur.png)\r\n *\r\n * @class\r\n * @extends Filter\r\n */\r\nexport class MotionBlurFilter extends Filter\r\n{\r\n    /** Default values for options. */\r\n    public static readonly DEFAULT_OPTIONS: MotionBlurFilterOptions = {\r\n        velocity: { x: 0, y: 0 },\r\n        kernelSize: 5,\r\n        offset: 0,\r\n    };\r\n\r\n    public uniforms: {\r\n        uVelocity: PointData;\r\n        uKernelSize: number;\r\n        uOffset: number;\r\n    };\r\n\r\n    private _kernelSize!: number;\r\n\r\n    /**\r\n     * @param options - Options for the MotionBlurFilter constructor.\r\n     */\r\n    constructor(options?: MotionBlurFilterOptions);\r\n    /**\r\n     * @deprecated since 8.0.0\r\n     *\r\n     * @param {PIXI.ObservablePoint|PIXI.PointData|number[]} [velocity=[0, 0]] - Sets the velocity of the motion for blur effect.\r\n     * @param {number} [kernelSize=5] - The kernelSize of the blur filter. Must be odd number >= 5\r\n     * @param {number} [offset=0] - The offset of the blur filter.\r\n     */\r\n    constructor(velocity?: number[] | PointData | ObservablePoint, kernelSize?: number, offset?: number);\r\n    /** @ignore */\r\n    constructor(...args: [MotionBlurFilterOptions?] | [(number[] | PointData | ObservablePoint)?, number?, number?])\r\n    {\r\n        let options = args[0] ?? {};\r\n\r\n        if (Array.isArray(options) || ('x' in options && 'y' in options) || options instanceof ObservablePoint)\r\n        {\r\n            // eslint-disable-next-line max-len\r\n            deprecation('6.0.0', 'MotionBlurFilter constructor params are now options object. See params: { velocity, kernelSize, offset }');\r\n\r\n            const x = 'x' in options ? options.x : options[0];\r\n            const y = 'y' in options ? options.y : options[1];\r\n\r\n            options = { velocity: { x, y } };\r\n\r\n            if (args[1] !== undefined) options.kernelSize = args[1];\r\n            if (args[2] !== undefined) options.offset = args[2];\r\n        }\r\n\r\n        options = { ...MotionBlurFilter.DEFAULT_OPTIONS, ...options };\r\n\r\n        const gpuProgram = GpuProgram.from({\r\n            vertex: {\r\n                source: wgslVertex,\r\n                entryPoint: 'mainVertex',\r\n            },\r\n            fragment: {\r\n                source,\r\n                entryPoint: 'mainFragment',\r\n            },\r\n        });\r\n\r\n        const glProgram = GlProgram.from({\r\n            vertex,\r\n            fragment,\r\n            name: 'motion-blur-filter',\r\n        });\r\n\r\n        super({\r\n            gpuProgram,\r\n            glProgram,\r\n            resources: {\r\n                motionBlurUniforms: {\r\n                    uVelocity: { value: options.velocity, type: 'vec2<f32>' },\r\n                    uKernelSize: { value: Math.trunc(options.kernelSize ?? 5), type: 'f32' },\r\n                    uOffset: { value: options.offset, type: 'f32' },\r\n                }\r\n            },\r\n        });\r\n\r\n        this.uniforms = this.resources.motionBlurUniforms.uniforms;\r\n\r\n        Object.assign(this, options);\r\n    }\r\n\r\n    /**\r\n     * Sets the velocity of the motion for blur effect\r\n     * This should be a size 2 array or an object containing `x` and `y` values, you cannot change types\r\n     * once defined in the constructor\r\n     * @default {x:0,y:0}\r\n     */\r\n    get velocity(): PointData { return this.uniforms.uVelocity; }\r\n    set velocity(value: PointData | number[])\r\n    {\r\n        if (Array.isArray(value))\r\n        {\r\n            value = { x: value[0], y: value[1] };\r\n        }\r\n\r\n        this.uniforms.uVelocity = value;\r\n        this._updateDirty();\r\n    }\r\n\r\n    /**\r\n     * Sets the velocity of the motion for blur effect on the `x` axis\r\n     * @default 0\r\n     */\r\n    get velocityX(): number { return this.velocity.x; }\r\n    set velocityX(value: number)\r\n    {\r\n        this.velocity.x = value;\r\n        this._updateDirty();\r\n    }\r\n\r\n    /**\r\n     * Sets the velocity of the motion for blur effect on the `x` axis\r\n     * @default 0\r\n     */\r\n    get velocityY(): number { return this.velocity.y; }\r\n    set velocityY(value: number)\r\n    {\r\n        this.velocity.y = value;\r\n        this._updateDirty();\r\n    }\r\n\r\n    /**\r\n     * The kernelSize of the blur filter. Must be odd number >= 5\r\n     * @default 5\r\n     */\r\n    get kernelSize(): number { return this._kernelSize; }\r\n    set kernelSize(value: number)\r\n    {\r\n        this._kernelSize = value;\r\n        this._updateDirty();\r\n    }\r\n\r\n    /**\r\n     * The offset of the blur filter\r\n     * @default 0\r\n     */\r\n    get offset(): number { return this.uniforms.uOffset; }\r\n    set offset(value: number) { this.uniforms.uOffset = value; }\r\n\r\n    private _updateDirty()\r\n    {\r\n        // The padding will be increased as the velocity and intern the blur size is changed\r\n        this.padding = (Math.max(Math.abs(this.velocityX), Math.abs(this.velocityY)) >> 0) + 1;\r\n        this.uniforms.uKernelSize = (this.velocityX !== 0 || this.velocityY !== 0) ? this._kernelSize : 0;\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}