{"version":3,"file":"PixelateFilter.mjs","sources":["../../src/pixelate/PixelateFilter.ts"],"sourcesContent":["import { Filter, GlProgram, GpuProgram, Point } from 'pixi.js';\r\nimport { vertex, wgslVertex } from '../defaults';\r\nimport fragment from './pixelate.frag';\r\nimport source from './pixelate.wgsl';\r\n\r\ntype Size = number | number[] | Point;\r\n\r\n/**\r\n * This filter applies a pixelate effect making display objects appear 'blocky'.<br>\r\n * ![original](../screenshots/original.png)![filter](../screenshots/pixelate.png)\r\n *\r\n * @class\r\n * @extends Filter\r\n */\r\nexport class PixelateFilter extends Filter\r\n{\r\n    /**\r\n     * @param {Point|Array<number>|number} [size=10] - Either the width/height of the size of the pixels, or square size\r\n     */\r\n    constructor(size: Size = 10)\r\n    {\r\n        const gpuProgram = GpuProgram.from({\r\n            vertex: {\r\n                source: wgslVertex,\r\n                entryPoint: 'mainVertex',\r\n            },\r\n            fragment: {\r\n                source,\r\n                entryPoint: 'mainFragment',\r\n            },\r\n        });\r\n\r\n        const glProgram = GlProgram.from({\r\n            vertex,\r\n            fragment,\r\n            name: 'pixelate-filter',\r\n        });\r\n\r\n        super({\r\n            gpuProgram,\r\n            glProgram,\r\n            resources: {\r\n                pixelateUniforms: {\r\n                    uSize: { value: new Float32Array(2), type: 'vec2<f32>' },\r\n                },\r\n            },\r\n        });\r\n\r\n        this.size = size;\r\n    }\r\n\r\n    /**\r\n     * The size of the pixels\r\n     * @default [10,10]\r\n     */\r\n    get size(): Size { return this.resources.pixelateUniforms.uniforms.uSize; }\r\n    set size(value: Size)\r\n    {\r\n        if (value instanceof Point)\r\n        {\r\n            this.sizeX = value.x;\r\n            this.sizeY = value.y;\r\n        }\r\n        else if (Array.isArray(value))\r\n        {\r\n            this.resources.pixelateUniforms.uniforms.uSize = value;\r\n        }\r\n        else\r\n        {\r\n            this.sizeX = this.sizeY = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * The size of the pixels on the `x` axis\r\n    * @default 10\r\n    */\r\n    get sizeX(): number { return this.resources.pixelateUniforms.uniforms.uSize[0]; }\r\n    set sizeX(value: number) { this.resources.pixelateUniforms.uniforms.uSize[0] = value; }\r\n\r\n    /**\r\n    * The size of the pixels on the `y` axis\r\n    * @default 10\r\n    */\r\n    get sizeY(): number { return this.resources.pixelateUniforms.uniforms.uSize[1]; }\r\n    set sizeY(value: number) { this.resources.pixelateUniforms.uniforms.uSize[1] = value; }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAcO,MAAM,uBAAuB,MACpC,CAAA;AAAA;AAAA;AAAA;AAAA,EAII,WAAA,CAAY,OAAa,EACzB,EAAA;AACI,IAAM,MAAA,UAAA,GAAa,WAAW,IAAK,CAAA;AAAA,MAC/B,MAAQ,EAAA;AAAA,QACJ,MAAQ,EAAA,UAAA;AAAA,QACR,UAAY,EAAA,YAAA;AAAA,OAChB;AAAA,MACA,QAAU,EAAA;AAAA,QACN,MAAA;AAAA,QACA,UAAY,EAAA,cAAA;AAAA,OAChB;AAAA,KACH,CAAA,CAAA;AAED,IAAM,MAAA,SAAA,GAAY,UAAU,IAAK,CAAA;AAAA,MAC7B,MAAA;AAAA,MACA,QAAA;AAAA,MACA,IAAM,EAAA,iBAAA;AAAA,KACT,CAAA,CAAA;AAED,IAAM,KAAA,CAAA;AAAA,MACF,UAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAW,EAAA;AAAA,QACP,gBAAkB,EAAA;AAAA,UACd,KAAA,EAAO,EAAE,KAAO,EAAA,IAAI,aAAa,CAAC,CAAA,EAAG,MAAM,WAAY,EAAA;AAAA,SAC3D;AAAA,OACJ;AAAA,KACH,CAAA,CAAA;AAED,IAAA,IAAA,CAAK,IAAO,GAAA,IAAA,CAAA;AAAA,GAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,IAAa,GAAA;AAAE,IAAO,OAAA,IAAA,CAAK,SAAU,CAAA,gBAAA,CAAiB,QAAS,CAAA,KAAA,CAAA;AAAA,GAAO;AAAA,EAC1E,IAAI,KAAK,KACT,EAAA;AACI,IAAA,IAAI,iBAAiB,KACrB,EAAA;AACI,MAAA,IAAA,CAAK,QAAQ,KAAM,CAAA,CAAA,CAAA;AACnB,MAAA,IAAA,CAAK,QAAQ,KAAM,CAAA,CAAA,CAAA;AAAA,KAEd,MAAA,IAAA,KAAA,CAAM,OAAQ,CAAA,KAAK,CAC5B,EAAA;AACI,MAAK,IAAA,CAAA,SAAA,CAAU,gBAAiB,CAAA,QAAA,CAAS,KAAQ,GAAA,KAAA,CAAA;AAAA,KAGrD,MAAA;AACI,MAAK,IAAA,CAAA,KAAA,GAAQ,KAAK,KAAQ,GAAA,KAAA,CAAA;AAAA,KAC9B;AAAA,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,KAAgB,GAAA;AAAE,IAAA,OAAO,IAAK,CAAA,SAAA,CAAU,gBAAiB,CAAA,QAAA,CAAS,MAAM,CAAC,CAAA,CAAA;AAAA,GAAG;AAAA,EAChF,IAAI,MAAM,KAAe,EAAA;AAAE,IAAA,IAAA,CAAK,SAAU,CAAA,gBAAA,CAAiB,QAAS,CAAA,KAAA,CAAM,CAAC,CAAI,GAAA,KAAA,CAAA;AAAA,GAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAMtF,IAAI,KAAgB,GAAA;AAAE,IAAA,OAAO,IAAK,CAAA,SAAA,CAAU,gBAAiB,CAAA,QAAA,CAAS,MAAM,CAAC,CAAA,CAAA;AAAA,GAAG;AAAA,EAChF,IAAI,MAAM,KAAe,EAAA;AAAE,IAAA,IAAA,CAAK,SAAU,CAAA,gBAAA,CAAiB,QAAS,CAAA,KAAA,CAAM,CAAC,CAAI,GAAA,KAAA,CAAA;AAAA,GAAO;AAC1F;;;;"}