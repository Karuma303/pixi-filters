var fragment = "precision highp float;\r\nin vec2 vTextureCoord;\r\nout vec4 finalColor;\r\n\r\nuniform sampler2D uTexture;\r\nuniform vec2 uDimensions;\r\nuniform float uParallel;\r\nuniform vec2 uLight;\r\nuniform float uAspect;\r\nuniform float uTime;\r\nuniform vec3 uRay;\r\n\r\nuniform vec4 uInputSize;\r\n\r\n${PERLIN}\r\n\r\nvoid main(void) {\r\n    vec2 uDimensions = uDimensions;\r\n    bool uParallel = uParallel > 0.5;\r\n    vec2 uLight = uLight;\r\n    float uAspect = uAspect;\r\n\r\n    vec2 coord = vTextureCoord * uInputSize.xy / uDimensions;\r\n\r\n    float d;\r\n\r\n    if (uParallel) {\r\n        float _cos = uLight.x;\r\n        float _sin = uLight.y;\r\n        d = (_cos * coord.x) + (_sin * coord.y * uAspect);\r\n    } else {\r\n        float dx = coord.x - uLight.x / uDimensions.x;\r\n        float dy = (coord.y - uLight.y / uDimensions.y) * uAspect;\r\n        float dis = sqrt(dx * dx + dy * dy) + 0.00001;\r\n        d = dy / dis;\r\n    }\r\n\r\n    float uTime = uTime;\r\n    vec3 uRay = uRay;\r\n\r\n    float gain = uRay[0];\r\n    float lacunarity = uRay[1];\r\n    float alpha = uRay[2];\r\n\r\n    vec3 dir = vec3(d, d, 0.0);\r\n    float noise = turb(dir + vec3(uTime, 0.0, 62.1 + uTime) * 0.05, vec3(480.0, 320.0, 480.0), lacunarity, gain);\r\n    noise = mix(noise, 0.0, 0.3);\r\n    //fade vertically.\r\n    vec4 mist = vec4(vec3(noise), 1.0) * (1.0 - coord.y);\r\n    mist.a = 1.0;\r\n    // apply user alpha\r\n    mist *= alpha;\r\n\r\n    finalColor = texture(uTexture, vTextureCoord) + mist;\r\n}\r\n";

export { fragment as default };
//# sourceMappingURL=god-ray2.mjs.map
