{"version":3,"file":"ZoomBlurFilter.js","sources":["../../src/zoom-blur/ZoomBlurFilter.ts"],"sourcesContent":["import { Filter, GlProgram, GpuProgram, PointData } from 'pixi.js';\r\nimport { vertex, wgslVertex } from '../defaults';\r\nimport fragment from './zoom-blur.frag';\r\nimport source from './zoom-blur.wgsl';\r\n\r\n/** Options for the ZoomBlurFilter constructor. */\r\nexport interface ZoomBlurFilterOptions\r\n{\r\n    /**\r\n     * Sets the strength of the zoom blur effect\r\n     * @default 0.1\r\n     */\r\n    strength?: number;\r\n    /**\r\n     * The `x` and `y` offset coordinates to change the position of the center of the circle of effect.\r\n     * This should be a size 2 array or an object containing `x` and `y` values, you cannot change types\r\n     * once defined in the constructor\r\n     * @default {x:0,y:0}\r\n     */\r\n    center?: PointData | number[];\r\n    /**\r\n     * The inner radius of zoom. The part in inner circle won't apply zoom blur effect\r\n     * @default 0\r\n     */\r\n    innerRadius?: number;\r\n    /**\r\n     * Outer radius of the effect. less than `0` equates to infinity\r\n     * @default -1\r\n     */\r\n    radius?: number;\r\n    /**\r\n     * On older iOS devices, it's better to not go above `13.0`.\r\n     * Decreasing this value will produce a lower-quality blur effect with more dithering\r\n     * @default 32\r\n     */\r\n    maxKernelSize?: number;\r\n}\r\n\r\n/**\r\n * The ZoomFilter applies a Zoom blur to an object.<br>\r\n * ![original](../screenshots/original.png)![filter](../screenshots/zoom-blur.png)\r\n *\r\n * @class\r\n * @extends Filter\r\n */\r\nexport class ZoomBlurFilter extends Filter\r\n{\r\n    /** Default values for options. */\r\n    public static readonly DEFAULT_OPTIONS: ZoomBlurFilterOptions = {\r\n        strength: 0.1,\r\n        center: { x: 0, y: 0 },\r\n        innerRadius: 0,\r\n        radius: -1,\r\n        maxKernelSize: 32,\r\n    };\r\n\r\n    public uniforms: {\r\n        uStrength: number;\r\n        uCenter: PointData;\r\n        uRadii: Float32Array\r\n    };\r\n\r\n    /**\r\n     * @param options - Options for the ZoomBlurFilter constructor.\r\n     */\r\n    constructor(options?: ZoomBlurFilterOptions)\r\n    {\r\n        options = { ...ZoomBlurFilter.DEFAULT_OPTIONS, ...options };\r\n\r\n        const kernelSize = options.maxKernelSize ?? 32;\r\n\r\n        const gpuProgram = GpuProgram.from({\r\n            vertex: {\r\n                source: wgslVertex,\r\n                entryPoint: 'mainVertex',\r\n            },\r\n            fragment: {\r\n                source: source.replace('${MAX_KERNEL_SIZE}', kernelSize.toFixed(1)),\r\n                entryPoint: 'mainFragment',\r\n            },\r\n        });\r\n\r\n        const glProgram = GlProgram.from({\r\n            vertex,\r\n            fragment: fragment.replace('${MAX_KERNEL_SIZE}', kernelSize.toFixed(1)),\r\n            name: 'zoom-blur-filter',\r\n        });\r\n\r\n        super({\r\n            gpuProgram,\r\n            glProgram,\r\n            resources: {\r\n                zoomBlurUniforms: {\r\n                    uStrength: { value: options.strength, type: 'f32' },\r\n                    uCenter: { value: options.center, type: 'vec2<f32>' },\r\n                    uRadii: { value: new Float32Array(2), type: 'vec2<f32>' },\r\n                }\r\n            },\r\n        });\r\n\r\n        this.uniforms = this.resources.zoomBlurUniforms.uniforms;\r\n\r\n        Object.assign(this, options);\r\n    }\r\n\r\n    /**\r\n     * Sets the strength of the zoom blur effect\r\n     * @default 0.1\r\n     */\r\n    get strength(): number { return this.uniforms.uStrength; }\r\n    set strength(value: number) { this.uniforms.uStrength = value; }\r\n\r\n    /**\r\n     * The center of the zoom\r\n     * @default [0,0]\r\n     */\r\n    get center(): PointData { return this.uniforms.uCenter; }\r\n    set center(value: PointData | number[])\r\n    {\r\n        if (Array.isArray(value))\r\n        {\r\n            value = { x: value[0], y: value[1] };\r\n        }\r\n\r\n        this.uniforms.uCenter = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the center of the effect in normalized screen coords on the `x` axis\r\n     * @default 0\r\n     */\r\n    get centerX(): number { return this.uniforms.uCenter.x; }\r\n    set centerX(value: number) { this.uniforms.uCenter.x = value; }\r\n\r\n    /**\r\n     * Sets the center of the effect in normalized screen coords on the `y` axis\r\n     * @default 0\r\n     */\r\n    get centerY(): number { return this.uniforms.uCenter.y; }\r\n    set centerY(value: number) { this.uniforms.uCenter.y = value; }\r\n\r\n    /**\r\n     * The inner radius of zoom. The part in inner circle won't apply zoom blur effect\r\n     * @default 0\r\n     */\r\n    get innerRadius(): number { return this.uniforms.uRadii[0]; }\r\n    set innerRadius(value: number) { this.uniforms.uRadii[0] = value; }\r\n\r\n    /**\r\n     * Outer radius of the effect. less than `0` equates to infinity\r\n     * @default -1\r\n     */\r\n    get radius(): number { return this.uniforms.uRadii[1]; }\r\n    set radius(value: number) { this.uniforms.uRadii[1] = (value < 0 || value === Infinity) ? -1 : value; }\r\n}\r\n"],"names":["Filter","GpuProgram","wgslVertex","source","GlProgram","vertex","fragment"],"mappings":"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"}