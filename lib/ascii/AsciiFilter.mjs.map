{"version":3,"file":"AsciiFilter.mjs","sources":["../../src/ascii/AsciiFilter.ts"],"sourcesContent":["import { Color, ColorSource, deprecation, Filter, GlProgram, GpuProgram } from 'pixi.js';\r\nimport { vertex, wgslVertex } from '../defaults';\r\nimport fragment from './ascii.frag';\r\nimport source from './ascii.wgsl';\r\n\r\n// This WebGPU filter has been ported from the WebGL renderer that was originally created by Vico (@vicocotea)\r\n\r\n/** Options for AsciiFilter constructor. */\r\nexport interface AsciiFilterOptions\r\n{\r\n    /**\r\n     * The pixel size used by the filter\r\n     * @default 8\r\n     */\r\n    size?: number;\r\n    /**\r\n     * A color to set the ascii characters to. If not set, the color will be taken from the source.\r\n     * @example [1.0, 1.0, 1.0] = 0xffffff\r\n     * @default 0x000000\r\n     */\r\n    color?: ColorSource;\r\n    /**\r\n     * Determine whether or not to replace the source colors with the provided.\r\n     *\r\n     * Will automatically be assigned to `true` if `color` is provided.\r\n     * Set `replaceColor` to `false` to prevent that.\r\n     * @default false\r\n     */\r\n    replaceColor?: boolean;\r\n}\r\n\r\n/**\r\n * An ASCII filter.<br>\r\n * ![original](../screenshots/original.png)![filter](../screenshots/ascii.png)\r\n *\r\n * @class\r\n * @extends Filter\r\n */\r\nexport class AsciiFilter extends Filter\r\n{\r\n    /** Default values for options. */\r\n    public static readonly DEFAULT_OPTIONS: AsciiFilterOptions = {\r\n        size: 8,\r\n        color: 0xffffff,\r\n        replaceColor: false,\r\n    };\r\n\r\n    public uniforms: {\r\n        uSize: number;\r\n        uColor: Float32Array;\r\n        uReplaceColor: number;\r\n    };\r\n\r\n    private _color!: Color;\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param {AsciiFilterOptions} options - The options of the ASCII filter.\r\n     */\r\n    constructor(options?: AsciiFilterOptions);\r\n    /**\r\n     * @deprecated since 6.0.0\r\n     *\r\n     * @param {number} [size=8] - Size of the font\r\n     */\r\n    constructor(size: number);\r\n    /** @ignore */\r\n    constructor(...args: [AsciiFilterOptions?] | [number])\r\n    {\r\n        let options = args[0] ?? {};\r\n\r\n        if (typeof options === 'number')\r\n        {\r\n            // eslint-disable-next-line max-len\r\n            deprecation('6.0.0', 'AsciiFilter constructor params are now options object. See params: { size, color, replaceColor }');\r\n\r\n            options = { size: options };\r\n        }\r\n\r\n        const replaceColor = options?.color && options.replaceColor !== false;\r\n\r\n        options = { ...AsciiFilter.DEFAULT_OPTIONS, ...options } as AsciiFilterOptions;\r\n\r\n        const gpuProgram = GpuProgram.from({\r\n            vertex: {\r\n                source: wgslVertex,\r\n                entryPoint: 'mainVertex',\r\n            },\r\n            fragment: {\r\n                source,\r\n                entryPoint: 'mainFragment',\r\n            },\r\n        });\r\n\r\n        const glProgram = GlProgram.from({\r\n            vertex,\r\n            fragment,\r\n            name: 'ascii-filter',\r\n        });\r\n\r\n        super({\r\n            gpuProgram,\r\n            glProgram,\r\n            resources: {\r\n                asciiUniforms: {\r\n                    uSize: { value: options.size, type: 'f32' },\r\n                    uColor: { value: new Float32Array(3), type: 'vec3<f32>' },\r\n                    uReplaceColor: { value: Number(replaceColor), type: 'f32' },\r\n                },\r\n            },\r\n        });\r\n\r\n        this.uniforms = this.resources.asciiUniforms.uniforms;\r\n        this._color = new Color();\r\n        this.color = options.color ?? 0xffffff;\r\n    }\r\n\r\n    /**\r\n     * The pixel size used by the filter.\r\n     * @default 8\r\n     */\r\n    get size(): number { return this.uniforms.uSize; }\r\n    set size(value: number) { this.uniforms.uSize = value; }\r\n\r\n    /**\r\n     * The resulting color of the ascii characters, as a 3 component RGB or numerical hex\r\n     * @example [1.0, 1.0, 1.0] = 0xffffff\r\n     * @default 0xffffff\r\n     */\r\n    get color(): ColorSource { return this._color.value as ColorSource; }\r\n    set color(value: ColorSource)\r\n    {\r\n        this._color.setValue(value);\r\n        const [r, g, b] = this._color.toArray();\r\n\r\n        this.uniforms.uColor[0] = r;\r\n        this.uniforms.uColor[1] = g;\r\n        this.uniforms.uColor[2] = b;\r\n    }\r\n\r\n    /**\r\n     * Determine whether or not to replace the source colors with the provided.\r\n     */\r\n    get replaceColor(): boolean { return this.uniforms.uReplaceColor > 0.5; }\r\n    set replaceColor(value: boolean) { this.uniforms.uReplaceColor = value ? 1 : 0; }\r\n}\r\n"],"names":[],"mappings":"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"}