var fragment = "precision highp float;\r\nin vec2 vTextureCoord;\r\nout vec4 finalColor;\r\n\r\nuniform sampler2D uTexture;\r\nuniform vec2 uDimensions;\r\nuniform vec2 uCenter;\r\nuniform float uRadius;\r\nuniform float uStrength;\r\n\r\nuniform vec4 uInputSize;\r\nuniform vec4 uInputClamp;\r\n\r\nvoid main()\r\n{\r\n    vec2 coord = vTextureCoord * uInputSize.xy;\r\n    coord -= uCenter * uDimensions.xy;\r\n    float distance = length(coord);\r\n\r\n    if (distance < uRadius) {\r\n        float percent = distance / uRadius;\r\n        if (uStrength > 0.0) {\r\n            coord *= mix(1.0, smoothstep(0.0, uRadius / distance, percent), uStrength * 0.75);\r\n        } else {\r\n            coord *= mix(1.0, pow(percent, 1.0 + uStrength * 0.75) * uRadius / distance, 1.0 - percent);\r\n        }\r\n    }\r\n\r\n    coord += uCenter * uDimensions.xy;\r\n    coord /= uInputSize.xy;\r\n    vec2 clampedCoord = clamp(coord, uInputClamp.xy, uInputClamp.zw);\r\n    vec4 color = texture(uTexture, clampedCoord);\r\n\r\n    if (coord != clampedCoord) {\r\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\r\n    }\r\n\r\n    finalColor = color;\r\n}\r\n";

export { fragment as default };
//# sourceMappingURL=bulge-pinch.mjs.map
