var fragment = "in vec2 vTextureCoord;\r\nout vec4 finalColor;\r\n\r\nconst int MAX_COLORS = ${MAX_COLORS};\r\n\r\nuniform sampler2D uTexture;\r\nuniform vec3 uOriginalColors[MAX_COLORS];\r\nuniform vec3 uTargetColors[MAX_COLORS];\r\nuniform float uTolerance;\r\n\r\nvoid main(void)\r\n{\r\n    finalColor = texture(uTexture, vTextureCoord);\r\n\r\n    float alpha = finalColor.a;\r\n    if (alpha < 0.0001)\r\n    {\r\n      return;\r\n    }\r\n\r\n    vec3 color = finalColor.rgb / alpha;\r\n\r\n    for(int i = 0; i < MAX_COLORS; i++)\r\n    {\r\n      vec3 origColor = uOriginalColors[i];\r\n      if (origColor.r < 0.0)\r\n      {\r\n        break;\r\n      }\r\n      vec3 colorDiff = origColor - color;\r\n      if (length(colorDiff) < uTolerance)\r\n      {\r\n        vec3 targetColor = uTargetColors[i];\r\n        finalColor = vec4((targetColor + colorDiff) * alpha, alpha);\r\n        return;\r\n      }\r\n    }\r\n}\r\n";

export { fragment as default };
//# sourceMappingURL=multi-color-replace2.mjs.map
